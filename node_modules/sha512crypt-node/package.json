{
  "_args": [
    [
      "sha512crypt-node@*",
      "/home/alinarez/MEGA/MEGAsync/PRogramacion-nuevo/nodejs/natural-server/node_modules/passwd-linux"
    ]
  ],
  "_from": "sha512crypt-node@*",
  "_id": "sha512crypt-node@0.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/sha512crypt-node",
  "_npmUser": {
    "email": "michael.vogt@gmail.com",
    "name": "mvo"
  },
  "_npmVersion": "1.3.23",
  "_phantomChildren": {},
  "_requested": {
    "name": "sha512crypt-node",
    "raw": "sha512crypt-node@*",
    "rawSpec": "*",
    "scope": null,
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "/passwd-linux"
  ],
  "_resolved": "https://registry.npmjs.org/sha512crypt-node/-/sha512crypt-node-0.1.0.tgz",
  "_shasum": "6a8e4694aff06367654cd20a790898cc855b4ac4",
  "_shrinkwrap": null,
  "_spec": "sha512crypt-node@*",
  "_where": "/home/alinarez/MEGA/MEGAsync/PRogramacion-nuevo/nodejs/natural-server/node_modules/passwd-linux",
  "author": {
    "name": "Michael Vogt"
  },
  "bin": {
    "sha512crypt-demo": "./demo.js"
  },
  "bugs": {
    "url": "https://github.com/mvo5/sha512crypt-node/issues"
  },
  "dependencies": {},
  "description": "Provide sha512crypt algorithm for nodejs",
  "devDependencies": {},
  "directories": {
    "doc": "./doc",
    "lib": "./lib"
  },
  "dist": {
    "shasum": "6a8e4694aff06367654cd20a790898cc855b4ac4",
    "tarball": "https://registry.npmjs.org/sha512crypt-node/-/sha512crypt-node-0.1.0.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/mvo5/sha512crypt-node",
  "keywords": [
    "sha512crypt"
  ],
  "license": "BSD",
  "main": "sha512crypt.js",
  "maintainers": [
    {
      "name": "mvo",
      "email": "michael.vogt@gmail.com"
    }
  ],
  "name": "sha512crypt-node",
  "optionalDependencies": {},
  "readme": "sha512crypt implementation for node\n===================================\n\nThis implements the sha512crypt algorithm as described in\nhttp://www.akkadia.org/drepper/SHA-crypt.txt\nin pure javascript.\n\nBasic usage:\n```\n$ ./demo.js pass salt\n$6$salt$3aEJgflnzWuw1O3tr0IYSmhUY0cZ7iBQeBP392T7RXjLP3TKKu3ddIapQaCpbD4p9ioeGaVIjOHaym7HvCuUm0\n\n$ python -c 'import crypt; crypt.crypt(\"pass\", \"$6$salt\")\n$6$salt$3aEJgflnzWuw1O3tr0IYSmhUY0cZ7iBQeBP392T7RXjLP3TKKu3ddIapQaCpbD4p9ioeGaVIjOHaym7HvCuUm0\n```\n\nUsing the \"rounds\" parameter as part of the salt:\n```\n$ ./demo.js pass '$6$rounds=1000$salt'\n$6$rounds=1000$salt$NqhXojlgP5NLvJojBnjQD87i66jhb8s3bZord3hSZoIgbCJqUfJdp7pclsLBBqgn02fAtd/vn4lieLeX5J.h90\n\n$ python -c 'import crypt; print crypt.crypt(\"pass\", \"$6$rounds=1000$salt\")'\n$6$rounds=1000$salt$NqhXojlgP5NLvJojBnjQD87i66jhb8s3bZord3hSZoIgbCJqUfJdp7pclsLBBqgn02fAtd/vn4lieLeX5J.h90\n```\n\nTests\n=====\n\nTests are done via mocha, see REQUIREMENTS for details.\n```\n$ npm install mocha nodeunit\n...\n$ cd tests\n$ make\nnodejs ../node_modules/.bin/mocha -u tdd test_sha512crypt.js\n\n  ․․․․․․․\n\n  7 passing (2 seconds)\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+https://github.com/mvo5/sha512crypt-node.git"
  },
  "version": "0.1.0"
}
